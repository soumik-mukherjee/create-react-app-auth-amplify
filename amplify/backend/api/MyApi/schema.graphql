type Masters
  @model
  @key(fields: ["type", "masterCode"]) {
  type: MasterType!
  """
  The masterCode maps to the indiviual code field of each master type.
  e.g. for MasterType = PARTY, masterCode = partyCode
  """
  masterCode: String!
  party: Party
  product: Product
  svb: SVB
}

type Party {
  partyCode: String! 
  partyName: String!
  partyType: Int
  validPartyRoles: [PartyRole]
  organizationType: String
  iecCode: String
  branchSrNo: String
  address: String
  city: String
  state: String
  pincode: String
  country: String
}

type Product {
  hsn: HSN
  partDescription: String 
  supplier: Party 
  partType: Int 
  shipper: Party 
  customer: Party
  eximSchemeCode: String 
  customsUom: Int
  genericDescription: String 
  manufacturer: Party 
  brand: String
  model: String 
  enduse: String 
  originCountry: Int
  countryOfSource: Int 
  countryOfTansit: Int
}

type SVB {
  Company: Party 
  shipper: Party 
  relation: String!
  svbRefNo: String
  svbDate: AWSDate 
  svbValidUpto: AWSDate 
  customsOffice: String
  tobeLoadedon: String 
  loadingRateassval: String
  assblStatus: Int
  loadingDutyrate: Float 
  loadingDutyratecur: Int
  dutyStatus: Int
}

type HSN {
  hsncode: Int!
  hsnDescription: String 
  uomId: Int 
  countryid: Int 
  totChargeValue: Float 
  effectiveStartdate: AWSDate 
  effectiveEnddate: AWSDate 
  status: Int
  policy: String
  casRegistryNumber: String
  remarks: String 
  products : [Product]
  hsnDuties:[String]
  notidtl:String
  pga: String
}

enum MasterType {
  PARTY
  SVB
  PRODUCT
}

enum PartyRole {
  IMPORTER
  EXPORTER
  CHA
  BROKER
  SVB
  SUPPLIER
}
